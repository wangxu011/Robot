/**
 * 多语言英文简体文件
 */
export default {
  general: {
    robotName: 'Bai Ling',
    callMe: 'Please start by saying "Hi {robotName}" or select "Function" to continue',
    welcome: 'welcome to use',
    home: 'Home',
    back: 'Back',
    select: 'Please select',
    input: 'Please input store name',
    all: 'All',
    a: 'A',
    b: 'B',
    t1: 'Terminal 1',
    t2: 'Terminal 2',
    t3: 'Terminal 3',
    t4: 'Terminal 4',
    f1: '1F',
    f2: '2F',
    f3: '3F',
    f4: '4F',
    f5: '5F',
    b1: 'B1',
    b2: 'B2',
    ISA: 'Inner Security Area',
    OSA: 'Outer Security Area',
    noData: 'No Data',
    noPic: 'No Pic',
    departure: 'Departures',
    arrival: 'Arrivals',
    unallocated: 'UNALLOCATED',
    meter: 'M',
    min: 'min',
    sed: 's',
    clickScreen: 'Click screen to use',
    enter: 'ENTER',
    del: 'DEL',
    enterPassword: 'Enter Password',
    verifyFaceAgain: 'Verify Face Again',
    goNow: 'Go now',
    reopen: 'Re-open luggage compartment door',
    prepareGo: 'We are set for',
    confirmPackage: 'kindly confirm that your luggage is placed well! ',
    needHelp: 'do you need {robotName} to open the luggage compartment and help you with the luggage?',
    ok: 'OK',
    no: 'No, thanks',
    clickToNavigate: 'Click "Navigate to boarding gate"',
    pause: 'Stop navigation',
    continue: 'Resume navigation',
    finish: 'End navigation',
    sayBye: 'Say goodbye to {robotName}',
    getOutPackage: 'Retrieving luggage',
    distance: 'Distance to destination',
    remainedTime: 'Time remaining',
    retryOpen: 'Retry Open',
    startNavigate: 'Navigate directly'
  },
  subPage: {
    scanFace: {
      title: 'Boarding Gate',
      tip: 'Please take off your face mask and face the screen'
    },
    flightSchedule: {
      title: 'Flights',
      input: 'Please input flight No. or destination'
    },
    airportMap: {
      title: 'Map',
    },
    food: {
      title: 'Food',
    },
    shopping: {
      title: 'Shopping',
    },
    facility: {
      title: 'Facilities',
      placeholder: 'Enter your destination'
    },
    traffic: {
      title: 'Traffic',
    },
    more: {
      title: 'More',
    }
  },
  tip: {
    searchNoShop: 'No matched position',
    loadAll: 'All data loaded',
    charging: '{robotName} is charging...',
    estop: 'We have come to an emergency stop!<br />Kindly press the emergency stop button again to resume navigation once you have confirmed your safety!',
    unmatch: 'Sorry, {robotName} is unable to retrieve your flight information',
    powerNotEnough: 'Low battery, <br />your navigation guide {robotName} is returning to the charging station...',
    turnBack: '{robotName} is returning home...',
    thanksForUse: 'Thanks for your use, {robotName} wishes you a pleasant journey！',
    inputPassword: 'Please enter your 4-digit password to open the luggage compartment',
    inputPassword2: 'Please enter 4-digit password',
    passwordIncorrect: 'Incorrect password, please enter password again',
    passwordIncorrectAndContact: 'Incorrect password, please enter password again or contact',
    verifyFailed: 'Sorry, failed to verify your identity.<br />You may enter your password to verify or try again via facial recognition.',
    verifySuccess: 'Verification successful, {robotName} is opening the luggage compartment!',
    verifyFace: 'Facial recognition in progress, please take off your face mask and face the screen',
    planRoute: 'Planning your route, <br />one moment please...',
    putPackage: 'Luggage compartment door is opened, please place your luggage inside and close the door, and we are ready to go！',
    openDoor: '{robotName} is opening the luggage compartment door...',
    setPassword: 'Please set a 4-digit password, you may open the luggage compartment via facial recognition or password at the end of this journey',
    foundFlightInfo: '{robotName} has already retrieve your flight information: ',
    start: 'All set, we are on the way to',
    attention: 'please pay attention to your safety',
    paused: 'Navigation paused',
    finished: 'Navigation ended',
    callLocked: 'Destination locked, pending for unlock...',
    pullOver: '{robotName} is pulling over, one moment please...',
    remainingDistance: 'The remaining distance is about',
    projectPassword: 'Please enter the 4-digit project password',
    projectPasswordIncorrect: 'Incorrect project password',
    doorOpened: 'Door has been opened, please help to close it',
    robotRunning: 'Robot is running',
    locateAtTarget: 'Robot has already located at target',
    openDoorFailed: 'Open door failed, <br />you may retry or begin directly',
    gateNotExit: 'Gate marker does not exist!'
  },
  map: {
    currentPos: 'Current Position',
    input: 'please input name',
    noData: 'no data',
    go: 'Go',
    noPath: 'no path',
    noShop: 'No matches position',
    mockNavi: 'Mock Navi'
  },
  table: {
    flight: 'FLIGHT',
    sched: 'SCHED',
    from: 'FROM/VIA',
    dest: 'TO/VIA',
    counter: 'COUNTERS',
    terminal: 'TERMINAL',
    gate: 'GATE',
    checkin: 'CHECK-IN',
    status: 'STATUS',
    actual: 'ACTUAL',
    name: 'NAME',
    departureTime: 'DEPARTURE TIME'
  },
  aiui: {
    askMe: 'Try to ask me',
    findFood: '"I would like to find some good food"',
    goToGate: '"Guide me to my boarding gate"',
    flight: '"Check flight status"',
    washroom: '"Where can I find the washroom"',
    clickToResume: 'Click to resume',
    clickToResumeTip: 'If you want to continue to use, please click continue to ask the button on the screen',
    map: 'map',
    shopping: 'shopping',
    food: 'food',
    facility: 'facility',
    goto: 'Has already goto the',
    page: 'page'
  }
}